<launch>
  <arg name="namespace" default="neuronbot2"/>
  <arg name="use_camera" default="false"/>
  <arg if="$(arg use_camera)" name="model_file" default="$(find neuronbot2_gazebo)/models/neuronbot2_with_camera/model.sdf"/>
  <arg unless="$(arg use_camera)" name="model_file" default="$(find neuronbot2_gazebo)/models/neuronbot2/model.sdf"/>
  <arg name="file_type" default="sdf"/>
  <arg name="model_name" default="$(arg namespace)"/>
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="yaw" default="0.0"/>
  <arg name="use_ekf" default="false"/>

  <group ns="$(arg namespace)">
    <param name="tf_prefix" value="$(arg namespace)"/>
    <node name="gazebo_robot" pkg="gazebo_ros" type="spawn_model" output="screen"
      args="-file $(arg model_file) -$(arg file_type) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y $(arg yaw) -model $(arg model_name)">
      <remap if="$(arg use_ekf)" from="odom" to="raw_odom"/>
    </node>
    <include file="$(find neuronbot2_gazebo)/launch/robot_state_publisher.launch">
      <arg name="prefix" value="$(arg namespace)"/>
    </include>
    <node if="$(arg use_ekf)" name="ekf" pkg="robot_localization" type="ekf_localization_node" output="screen">
      <rosparam command="load" file="$(find neuronbot2_gazebo)/params/ekf_params.yaml"/>
      <param if="$(eval namespace != '/')" name="map_frame" value="$(arg namespace)/map"/>
      <param if="$(eval namespace != '/')" name="odom_frame" value="$(arg namespace)/odom"/>
      <param if="$(eval namespace != '/')" name="base_link_frame" value="$(arg namespace)/base_footprint"/>
      <param if="$(eval namespace != '/')" name="world_frame" value="$(arg namespace)/odom"/>
      <param name="odom0" value="raw_odom"/>
      <param name="imu0" value="imu/data"/>
      <remap from="odometry/filtered" to="odom"/>
    </node>
  </group>
</launch>
