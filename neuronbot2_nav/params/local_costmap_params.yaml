local_costmap:
   global_frame: odom
   robot_base_frame: base_footprint
   update_frequency: 5.0
   publish_frequency: 2.0
   static_map: false
   rolling_window: true
   width: 2
   height: 2
   resolution: 0.05
   transform_tolerance: 0.5

   plugins:            
       - {name: obstacle_layer, type: "costmap_2d::ObstacleLayer"}
       - {name: inflation, type: "costmap_2d::InflationLayer"}
       - {name: rgbd_obstacle_layer,     type: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"}

   obstacle_layer:
       observation_sources: laser
       laser: {data_type: LaserScan, sensor_frame: laser_frame, topic: /scan, marking: true, clearing: true, min_obstacle_height: -0.05, obstacle_range: 2.0, raytrace_range: 5.0, inf_is_valid: true}
       

   inflation:
       inflation_radius: 0.75
       cost_scaling_factor: 4 # larger number = lower cost elevation

   rgbd_obstacle_layer:
     enabled:                  true
     voxel_decay:              15    # seconds if linear, e^n if exponential
     decay_model:              0     # 0=linear, 1=exponential, -1=persistent
     voxel_size:               0.05  # meters
     track_unknown_space:      true  # default space is known
     max_obstacle_height:      2.0   # meters
     unknown_threshold:        15    # voxel height
     mark_threshold:           0     # voxel height
     update_footprint_enabled: true
     combination_method:       1     # 1=max, 0=override
     obstacle_range:           3.0   # meters
     origin_z:                 0.0   # meters
     publish_voxel_map:        true # default off
     transform_tolerance:      0.2   # seconds
     mapping_mode:             false # default off, saves map not for navigation
     map_save_duration:        60    # default 60s, how often to autosave
     observation_sources:      rgbd1_mark rgbd1_clear
     rgbd1_mark:
       data_type: PointCloud2
       topic: kinect_camera/depth/points
       marking: true
       clearing: false
       min_obstacle_height: 0.0     # default 0, meters
       max_obstacle_height: 2.0     # default 3, meters
       expected_update_rate: 0.0    # default 0, if not updating at this rate at least, remove from buffer
       observation_persistence: 0.0 # default 0, use all measurements taken during now-value, 0=latest
       inf_is_valid: false          # default false, for laser scans
       voxel_filter: false          # default off, apply voxel filter to sensor, recommend on
       voxel_min_points: 0          # default 0, minimum points per voxel for voxel filter
       clear_after_reading: true    # default false, clear the buffer after the layer gets readings from it
     rgbd1_clear:
       data_type: PointCloud2
       topic: kinect_camera/depth/points
       marking: false
       clearing: true
       max_z: 7.0                  # default 0, meters
       min_z: 0.1                  # default 10, meters
       vertical_fov_angle: 0.8745  # default 0.7, radians
       horizontal_fov_angle: 1.048 # default 1.04, radians
       decay_acceleration: 5.0     # default 0, 1/s^2. If laser scanner MUST be 0
       model_type: 0                # default 0, model type for frustum. 0=depth camera, 1=3d lidar like VLP16 or similar
